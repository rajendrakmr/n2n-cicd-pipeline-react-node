apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql
  namespace: ecommerce-ns
spec:
  serviceName: mysql-svc
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      initContainers:
        - name: init-mysql-schema
          image: mysql:8.0
          command: ["/bin/sh", "-c"]
          args:
            - |
              echo "Waiting for MySQL to be ready..."
              until mysqladmin ping -h mysql-0.mysql-svc.ecommerce-ns.svc.cluster.local -uroot -p$MYSQL_ROOT_PASSWORD --silent; do
                sleep 2
              done
              echo "Running schema from /init-db/init.sql..."
              mysql -h mysql-0.mysql-svc.ecommerce-ns.svc.cluster.local -uroot -p$MYSQL_ROOT_PASSWORD < /init-db/init.sql
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: ecommerce-secret
                  key: MYSQL_ROOT_PASSWORD
          volumeMounts:
            - name: schema
              mountPath: /init-db
      containers:
        - name: mysql
          image: mysql:8.0
          ports:
            - containerPort: 3306
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: ecommerce-secret
                  key: MYSQL_ROOT_PASSWORD
            - name: MYSQL_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: ecommerce-config
                  key: MYSQL_DATABASE
          volumeMounts:
            - name: mysql-data
              mountPath: /var/lib/mysql
      volumes:
        - name: schema
          hostPath:
            path: /init-db  # Replace with your actual host path
            type: Directory
  volumeClaimTemplates:
    - metadata:
        name: mysql-data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 1Gi
